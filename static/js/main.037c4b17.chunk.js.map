{"version":3,"sources":["CanvasContext.js","Canvas.js","Component/Toolbar.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["CanvasContext","React","createContext","CanvasProvider","children","useState","isDrawing","setIsDrawing","xpos","Setxpos","ypos","Setypos","canvasRef","useRef","contextRef","Provider","value","prepareCanvas","color","canvas","current","width","window","innerWidth","height","innerHeight","style","position","top","left","margin","backgroundColor","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","clearCanvas","fillStyle","fillRect","draw","lineTo","stroke","addtext","text","document","getElementById","useCanvas","useContext","Canvas","props","Setcolor","typing","Settyping","tool","zIndex","useEffect","className","id","icon","type","placeholder","onChange","e","target","onMouseDown","onMouseUp","onMouseMove","ref","Toolbar","index","Setindex","tools","size","status","onClick","navclick","val","undo","alert","redo","map","item","k","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","StrictMode"],"mappings":"sTAEMA,EAAgBC,IAAMC,gBAEfC,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqBF,mBAAS,GAA9B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAqBJ,mBAAS,GAA9B,mBAAOK,EAAP,KAAYC,EAAZ,KACMC,EAAYC,iBAAO,MACnBC,EAAaD,iBAAO,MA+D1B,OACE,cAACb,EAAce,SAAf,CACEC,MAAO,CACLR,OACAE,OACAE,YACAE,aACAG,cApEgB,SAACC,GACrB,IAAMC,EAASP,EAAUQ,QACzBD,EAAOE,MAA4B,EAApBC,OAAOC,WACtBJ,EAAOK,OAA8B,EAArBF,OAAOG,YACvBN,EAAOO,MAAML,MAAb,UAAwBC,OAAOC,WAA/B,MACAJ,EAAOO,MAAMF,OAAb,UAAyBF,OAAOG,YAAhC,MACAN,EAAOO,MAAMC,SAAb,QACAR,EAAOO,MAAME,IAAM,MACnBT,EAAOO,MAAMG,KAAO,MACpBV,EAAOO,MAAMI,OAAS,OACtBX,EAAOO,MAAMK,gBAAgB,QAE7B,IAAMC,EAAUb,EAAOc,WAAW,MAClCD,EAAQE,MAAM,EAAG,GACjBF,EAAQG,QAAU,QAClBH,EAAQI,YAAclB,EACtBc,EAAQK,UAAY,EACpBvB,EAAWM,QAAUY,GAoDjBM,aAhDe,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEdC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB3B,EAAWM,QAAQsB,YACnB5B,EAAWM,QAAQuB,OAAOH,EAASC,GACnClC,GAAa,IA4CTqC,cAzCgB,WACpB9B,EAAWM,QAAQyB,YACnBtC,GAAa,IAwCTuC,YAnBc,WAClB,IAAM3B,EAASP,EAAUQ,QACnBY,EAAUb,EAAOc,WAAW,MAClCD,EAAQe,UAAY,QACpBf,EAAQgB,SAAS,EAAG,EAAG7B,EAAOE,MAAOF,EAAOK,SAgBxCyB,KAtCO,SAAC,EAAgB/B,GAAW,IAAzBqB,EAAwB,EAAxBA,YAGd,GAFA9B,EAAQ8B,EAAYC,SACpB7B,EAAQ4B,EAAYE,SACfnC,EAAL,CAGA,IAAQkC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjB3B,EAAWM,QAAQ8B,OAAOV,EAASC,GACnC3B,EAAWM,QAAQ+B,WA+BfC,QA5BQ,SAAC,EAAgBC,GAAQ,IAAtBd,EAAqB,EAArBA,YAEPC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBa,SAASC,eAAe,cAAc7B,MAAMC,SAAS,QACrD2B,SAASC,eAAe,cAAc7B,MAAMG,KAAKW,EACjDc,SAASC,eAAe,cAAc7B,MAAMC,SAASc,IAYrD,SAcGrC,KAKMoD,EAAY,kBAAMC,qBAAWzD,I,MCU3B0D,MAlGR,SAAgBC,GAGrB,MAAuBtD,mBAAS,SAAhC,mBAAOa,EAAP,KAAa0C,EAAb,KACA,EAAwBvD,mBAAS,IAAjC,mBAAMwD,EAAN,KAAaC,EAAb,KACA,EAA6BzD,oBAAS,GAAtC,6BAEe,UAAZsD,EAAMI,MAEPH,EAAS,SAKRN,SAASC,eAAe,cAEzBD,SAASC,eAAe,YAAY7B,MAAMC,SAAS,WACnD2B,SAASC,eAAe,YAAY7B,MAAMG,KAAK,MAC/CyB,SAASC,eAAe,YAAY7B,MAAMK,gBAAgB,MAC1DuB,SAASC,eAAe,YAAY7B,MAAMsC,OAAO,QAIhDV,SAASC,eAAe,cAM7B,IAKE,EAOIC,IAPGhD,EAAP,EAAOA,KACLE,EADF,EACEA,KACAE,EAFF,EAEEA,UACAK,EAHF,EAGEA,cACAqB,EAJF,EAIEA,aACAM,EALF,EAKEA,cACAK,EANF,EAMEA,KAAMG,EANR,EAMQA,QAcR,GAXCE,SAASC,eAAe,cAEzBD,SAASC,eAAe,YAAY7B,MAAMG,KAA1C,UAAkDrB,EAAK,GAAvD,MACA8C,SAASC,eAAe,YAAY7B,MAAME,IAA1C,UAAiDlB,EAAK,GAAtD,OAGAuD,qBAAU,WACRhD,EAAcC,KACb,IAGY,UAAZyC,EAAMI,MAA8B,UAAZJ,EAAMI,MAA8B,UAAZJ,EAAMI,MAA8B,QAAZJ,EAAMI,MAA4B,UAAZJ,EAAMI,MAA8B,QAAZJ,EAAMI,MAA4B,UAAZJ,EAAMI,KAEnJ,OACE,sBAAKG,UAAU,UAAf,UACA,qBAAKA,UAAU,UAAUC,GAAG,UAA5B,+BAKER,EAAMS,KAAO,qBAAKF,UAAU,WAAWC,GAAG,WAA7B,SAAyCR,EAAMS,OAAc,KAG/D,QAAZT,EAAMI,KAEP,uBAAOM,KAAK,OAAOH,UAAU,YAAYC,GAAG,YAAYG,YAAY,YAAYC,SAvC1E,SAACC,GAEXV,EAAUU,EAAEC,OAAOzD,UAuCf,KAGa,QAAZ2C,EAAMI,KAEP,qBAAKG,UAAU,aAAaC,GAAG,aAA/B,SAA8CN,IAE9C,KAGE,wBACDK,UAAU,SAASC,GAAG,SAErBO,YAA0B,QAAbf,EAAMI,KAAgBzB,EAAec,EAElDuB,UAAwB,QAAbhB,EAAMI,KAAgBnB,EAAgB,KAEjDgC,YAA2B,QAAbjB,EAAMI,KAAgBd,EAAO,KAC3C4B,IAAKjE,QC0BEkE,EAvGD,WACV,IAAQhC,EAAgBU,IAAhBV,YACR,EAAqBzC,mBAAS,UAA9B,mBACA,GADA,UACyBA,oBAAS,IAAlC,mBACA,GADA,UACuBA,mBAAS,IAAhC,mBAAO0E,EAAP,KAAaC,EAAb,KACMC,EAAM,CAAC,CACTd,GAAG,EACHJ,KAAK,OACLK,KAAK,cAAC,IAAD,CAAWF,UAAU,OAAOgB,KAAM,GAAIf,GAAG,MAC9CgB,QAAO,GAEX,CACIhB,GAAG,EACHJ,KAAK,SACLK,KAAK,cAAC,IAAD,CAAeF,UAAU,OAAOgB,KAAM,GAAIf,GAAG,IAAIiB,QAASC,IAC/DF,QAAO,GAEX,CACIhB,GAAG,EACHJ,KAAK,SACLK,KAAM,cAAC,IAAD,CAAcF,UAAU,OAAOgB,KAAM,GAAIf,GAAG,IAAIiB,QAASC,IAC/DF,QAAO,GAEX,CACIhB,GAAG,EACHJ,KAAK,SACLK,KAAM,cAAC,IAAD,CAAUF,UAAU,OAAOgB,KAAM,GAAIf,GAAG,IAAIiB,QAASC,IAC3DF,QAAO,GAEX,CACIhB,GAAG,EACHJ,KAAK,OACLK,KAAM,cAAC,IAAD,CAAcc,KAAM,GAAIhB,UAAU,OAAOC,GAAG,IAAIiB,QAASC,IAC/DF,QAAO,GAGX,CACIhB,GAAG,EACHJ,KAAM,SACNK,KAAM,cAAC,IAAD,CAAUF,UAAU,OAAQC,GAAG,IAAIe,KAAM,GAAIE,QAAStC,IAC5DqC,QAAQ,IAMhB,SAASE,EAASb,GACf,IAAIc,EAAId,EAAEC,OAAON,GAOhBa,EANGM,EAMMd,EAAEC,OAAON,GAJN,GAQhB,SAASoB,IACLC,MAAM,QAEV,SAASC,IACLD,MAAM,QAEV,OACI,sBAAKtB,UAAU,UAAUC,GAAG,UAA5B,UAEI,qBAAKD,UAAU,4BAA4BC,GAAG,gBAA9C,SAEQ,sBAAKD,UAAU,YAAYC,GAAG,YAA9B,UAEQc,EAAMS,KAAI,SAAAC,GAAI,OACV,qBAAKzB,UAAU,YAAYC,GAAIwB,EAAKxB,GAAIiB,QAAkB,GAATO,EAAKxB,GAASrB,EAAcuC,EAA7E,SACI,wBAAQnB,UAAWyB,EAAKxB,IAAIY,EAAQ,mBAAqB,OAAQZ,GAAIwB,EAAKxB,GAAIiB,QAAkB,GAATO,EAAKxB,GAASrB,EAAcuC,EAAnH,SACVM,EAAKvB,QAF6FuB,EAAKxB,OAS/G,qBAAKD,UAAU,YAAakB,QAASG,EAArC,SACkB,wBAAQrB,UAAU,mBAAmBkB,QAASG,EAAMK,GAAC,EAArD,SACA,cAAC,IAAD,CAAQ1B,UAAU,OAAQgB,KAAM,GAAKE,QAASG,QAIjE,qBAAKrB,UAAU,YAAakB,QAASK,EAArC,SACmB,wBAAQvB,UAAU,mBAAmBkB,QAASK,EAAMG,GAAC,EAArD,SACA,cAAC,IAAD,CAAQ1B,UAAU,OAAQgB,KAAM,GAAKE,QAASK,aAOtE,cAAC,EAAD,CAAQ1B,KAAMkB,EAAMF,GAAOhB,KAAMK,KAA2B,WAApBa,EAAMF,GAAOhB,KAAoBkB,EAAMF,GAAOX,KAAO,W,MC9FtFyB,MAZf,WAGI,OAAQ,qBAAK3B,UAAU,MAAf,SAET,cAAC,EAAD,OCEY4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKMQ,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJvD,SAASC,eAAe,SAM1BuC,K","file":"static/js/main.037c4b17.chunk.js","sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\n\nconst CanvasContext = React.createContext();\n\nexport const CanvasProvider = ({ children }) => {\n  const [isDrawing, setIsDrawing] = useState(false)\n  const [xpos,Setxpos]=useState(0)\n  const [ypos,Setypos]=useState(0)\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  \n  const prepareCanvas = (color) => {\n    const canvas = canvasRef.current\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n    canvas.style.position = `fixed`;\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.margin = 'auto';\n    canvas.style.backgroundColor='white'\n\n    const context = canvas.getContext(\"2d\")\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = color;\n    context.lineWidth = 5;\n    contextRef.current = context;\n  };\n\n\n  const startDrawing = ({ nativeEvent }) => {\n  \n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent },color) => {\n    Setxpos(nativeEvent.offsetX)\n    Setypos(nativeEvent.offsetY)\n    if (!isDrawing) {\n      return;\n    }\n    const { offsetX, offsetY } = nativeEvent;\n    contextRef.current.lineTo(offsetX, offsetY);\n    contextRef.current.stroke();\n  };\n\n  const addtext=({ nativeEvent },text)=>{\n\n    const { offsetX, offsetY } = nativeEvent;\n    document.getElementById('typed-text').style.position=\"fixed\"\n    document.getElementById('typed-text').style.left=offsetX\n    document.getElementById('typed-text').style.position=offsetY\n  }\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\")\n    context.fillStyle = \"white\"\n    context.fillRect(0, 0, canvas.width, canvas.height)\n  }\n\n\n\n  return (\n    <CanvasContext.Provider\n      value={{\n        xpos,\n        ypos,\n        canvasRef,\n        contextRef,\n        prepareCanvas,\n        startDrawing,\n        finishDrawing,\n        clearCanvas,\n        draw,\n        addtext\n      }}\n    >\n      {children}\n    </CanvasContext.Provider>\n  );\n};\n\nexport const useCanvas = () => useContext(CanvasContext);\n","import React, { useEffect, useState } from \"react\";\nimport { useCanvas } from \"./CanvasContext\";\nimport './canvas.css'\nimport { GiDivingDagger } from \"react-icons/gi\";\nexport function Canvas(props) {\n\n  \n  const [color,Setcolor]=useState('black')\n  const[typing,Settyping]=useState('')\n  const [textarea,Settextarea]=useState(false)\n\n  if(props.tool=='Eraser')\n  {\n    Setcolor('white')\n  }\n\n  \n\n  if(document.getElementById('text-bar'))\n  {\n    document.getElementById('text-bar').style.position=\"absolute\"\n    document.getElementById('text-bar').style.left=\"50%\"\n    document.getElementById('text-bar').style.backgroundColor=\"red\"\n    document.getElementById('text-bar').style.zIndex=\"1000\"\n\n  }\n\n  if(document.getElementById('typed-text'))\n  {\n\n\n  }\n\nconst typer=(e)=>{\n\n  Settyping(e.target.value)\n}\n\n  const {xpos,\n    ypos,\n    canvasRef,\n    prepareCanvas,\n    startDrawing,\n    finishDrawing,\n    draw, addtext\n  } = useCanvas();\n\nif(document.getElementById('icon-div')){\n\n  document.getElementById('icon-div').style.left=`${xpos+14}px`\n  document.getElementById('icon-div').style.top=`${ypos-12}px`\n}\n\n  useEffect(() => {\n    prepareCanvas(color);\n  }, []);\n\n\n  if(props.tool=='Pencil' || props.tool=='Eraser' || props.tool=='Cursor' || props.tool=='Hand' || props.tool=='Upload' || props.tool=='Text' || props.tool=='Square')\n  {\n    return (\n      <div className=\"canvase\">   \n      <div className=\"heading\" id=\"heading\">\n        \n          Made by Adityaraj\n             </div>\n      {\n        props.icon ? <div className=\"icon-div\" id=\"icon-div\">{props.icon}</div> : null\n      }\n      \n      {props.tool=='Text' \n      ?\n      <input type=\"text\" className=\"text-bari\" id=\"text-bari\" placeholder=\"Text here\" onChange={typer} />\n      :\n      null\n\n      }\n      {props.tool=='Text' \n      ?\n      <div className=\"typed-text\" id=\"typed-text\" >{typing}</div>\n      :\n      null\n\n      }\n        <canvas\n       className=\"canvas\" id=\"canvas\"\n        \n        onMouseDown={props.tool !='Text' ? startDrawing : addtext}\n        \n        onMouseUp={props.tool !='Text' ? finishDrawing : null}\n\n        onMouseMove={ props.tool !='Text' ? draw : null }\n        ref={canvasRef}\n      />\n\n</div>\n \n    );\n  }\n  \n  \n}\nexport default Canvas","import React, { useState } from 'react'\r\nimport './Toolbar.css'\r\nimport {IoIosHand} from 'react-icons/io'\r\nimport {GiArrowCursor} from 'react-icons/gi'\r\nimport {BsSquare} from 'react-icons/bs'\r\nimport {RiPencilFill} from 'react-icons/ri'\r\nimport {MdTextFields} from 'react-icons/md'\r\nimport {FaEraser} from 'react-icons/fa'\r\nimport {BiImageAlt} from 'react-icons/bi'\r\nimport {CgUndo,CgRedo} from 'react-icons/cg'\r\nimport Canvas from '../Canvas'\r\nimport { useCanvas } from '../CanvasContext'\r\nimport {ClearCanvasButton} from '../ClearCanvasButton'\r\n\r\n\r\nconst Toolbar=()=>{\r\n    const { clearCanvas } = useCanvas()\r\n    const [tool,Settool]=useState('pencil')\r\n    const [status,Setstatus]=useState(true)\r\n    const [index,Setindex]=useState(2)\r\n    const tools=[{\r\n        id:0,\r\n        tool:'Hand',\r\n        icon:<IoIosHand className=\"icon\" size={25} id='0' />,\r\n        status:false\r\n    },\r\n    {\r\n        id:1,\r\n        tool:'Cursor',\r\n        icon:<GiArrowCursor className=\"icon\" size={25} id='1' onClick={navclick} />,\r\n        status:false\r\n    },\r\n    {\r\n        id:2,\r\n        tool:'Pencil',\r\n        icon: <RiPencilFill className=\"icon\" size={25} id='2' onClick={navclick} />,\r\n        status:false\r\n    },\r\n    {\r\n        id:3,\r\n        tool:'Square',\r\n        icon :<BsSquare className=\"icon\" size={20} id='3' onClick={navclick} />,\r\n        status:false\r\n    },\r\n    {\r\n        id:4,\r\n        tool:'Text',\r\n        icon: <MdTextFields size={25} className=\"icon\" id='4' onClick={navclick} />,\r\n        status:false\r\n    },\r\n\r\n    {   \r\n        id:5,\r\n        tool :'Eraser',\r\n        icon: <FaEraser className=\"icon\"  id='5' size={25} onClick={clearCanvas} />,\r\n        status :false\r\n    }\r\n    \r\n    \r\n\r\n]\r\nfunction navclick(e){\r\n   let val=e.target.id\r\n   if(!val)\r\n   {\r\n       Setindex(0)\r\n   }\r\n   else\r\n   {\r\n    Setindex(e.target.id)\r\n   }\r\n    \r\n}\r\nfunction undo(){\r\n    alert('Undo')\r\n}\r\nfunction redo(){\r\n    alert('redo')\r\n}\r\nreturn (\r\n    <div className=\"toolbar\" id=\"toolbar\">\r\n            \r\n        <div className=\"inner-toolbar bg-gray-200\" id=\"inner-toolbar\">\r\n               \r\n                <div className=\"all-tools\" id=\"all-tools\">\r\n                    {\r\n                        tools.map(item=>(\r\n                            <div className=\"tool-iem \" id={item.id} onClick={item.id==5 ?  clearCanvas : navclick} key={item.id}>\r\n                                <button className={item.id==index ? \"tool bg-blue-500\" : 'tool'} id={item.id} onClick={item.id==5 ?  clearCanvas : navclick }>\r\n                     {item.icon}\r\n                     </button>\r\n             </div>\r\n                        )\r\n                            \r\n                        )\r\n                    }\r\n              <div className=\"tool-iem \"  onClick={undo} >\r\n                                <button className='tool bg-gray-500' onClick={undo} k>\r\n                                <CgUndo className=\"icon\"  size={25}  onClick={undo}  />\r\n                     </button>\r\n             </div>\r\n                    \r\n             <div className=\"tool-iem \"  onClick={redo} >\r\n                                <button className='tool bg-gray-500' onClick={redo} k>\r\n                                <CgRedo className=\"icon\"  size={25}  onClick={redo}  />\r\n                     </button>\r\n             </div>\r\n           \r\n             </div>\r\n        </div>\r\n\r\n        <Canvas tool={tools[index].tool} icon={ tools[index].tool!=='Cursor' ?   tools[index].icon : null}  />\r\n  \r\n     \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Toolbar","import './App.css';\nimport Toolbar from './Component/Toolbar'\nimport './needed/main.css' \n\n\nfunction App() {\n \n\n    return (<div className=\"App\"> \n    \n   <Toolbar />\n  \n     </div>\n    )\n\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { CanvasProvider } from \"./CanvasContext\";\nReactDOM.render(\n  <React.StrictMode>\n    <CanvasProvider>\n      <App />\n    </CanvasProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}